"""ccmr tables

Revision ID: baed7d39c593
Revises: d0fee7a50821
Create Date: 2024-09-06 22:41:55.494253

"""
from typing import Sequence, Union
import geoalchemy2

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'baed7d39c593'
down_revision: Union[str, None] = 'd0fee7a50821'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cadastral_repository',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('cadastral_unique_id', sa.String(), nullable=False),
    sa.Column('boundary_polygon', geoalchemy2.types.Geometry(geometry_type='POLYGON', srid=4326, from_text='ST_GeomFromEWKT', name='geometry', nullable=False), nullable=False),
    sa.Column('land_type', sa.Enum('RESIDENTIAL', 'COMMERCIAL', 'INDUSTRIAL', 'ECOSENSITIVE', 'TRANSPORT', 'FOREST', 'WETLAND', 'AGRICULTURAL', 'RIVER', 'LAKE', name='landtypeenum'), nullable=False),
    sa.Column('ownership_type', sa.Enum('CENTRAL_GOV', 'STATE_GOV', 'LOCAL_SELF_GOV', 'PRIVATE', name='landownershiptype'), nullable=False),
    sa.Column('location_coordinates', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, from_text='ST_GeomFromEWKT', name='geometry', nullable=False), nullable=False),
    sa.Column('area', sa.Integer(), nullable=False),
    sa.Column('elevation', sa.Float(), nullable=True),
    sa.Column('slop', sa.Float(), nullable=True),
    sa.Column('active_from', sa.Date(), nullable=False),
    sa.Column('active_till', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('cadastral_registery',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('parent_land_id', sa.UUID(), nullable=False),
    sa.Column('child_land_id', sa.UUID(), nullable=False),
    sa.Column('formed_by', sa.Enum('LAND_REGISTRATION', 'LAND_SPLIT', 'LAND_MERGE', 'TYPE_CHANGE', name='landformedbyenum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['child_land_id'], ['cadastral_repository.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['parent_land_id'], ['cadastral_repository.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cadastral_typechange_registery',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('registery_id', sa.UUID(), nullable=False),
    sa.Column('type_from', sa.Enum('RESIDENTIAL', 'COMMERCIAL', 'INDUSTRIAL', 'ECOSENSITIVE', 'TRANSPORT', 'FOREST', 'WETLAND', 'AGRICULTURAL', 'RIVER', 'LAKE', name='landtypeenum'), nullable=False),
    sa.Column('type_to', sa.Enum('RESIDENTIAL', 'COMMERCIAL', 'INDUSTRIAL', 'ECOSENSITIVE', 'TRANSPORT', 'FOREST', 'WETLAND', 'AGRICULTURAL', 'RIVER', 'LAKE', name='landtypeenum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['registery_id'], ['cadastral_registery.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('cadastral_typechange_registery')
    op.drop_table('cadastral_registery')
    op.drop_index('idx_cadastral_repository_location_coordinates', table_name='cadastral_repository', postgresql_using='gist')
    op.drop_index('idx_cadastral_repository_boundary_polygon', table_name='cadastral_repository', postgresql_using='gist')
    op.drop_table('cadastral_repository')
    # ### end Alembic commands ###
